{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*\n * Mailcheck https://github.com/mailcheck/mailcheck\n * Author\n * Derrick Ko (@derrickko)\n *\n * Released under the MIT License.\n *\n * v 1.1.1\n */\n\nvar Mailcheck = {\n  domainThreshold: 2,\n  secondLevelThreshold: 2,\n  topLevelThreshold: 2,\n\n  defaultDomains: ['msn.com', 'bellsouth.net',\n    'telus.net', 'comcast.net', 'optusnet.com.au',\n    'earthlink.net', 'qq.com', 'sky.com', 'icloud.com',\n    'mac.com', 'sympatico.ca', 'googlemail.com',\n    'att.net', 'xtra.co.nz', 'web.de',\n    'cox.net', 'gmail.com', 'ymail.com',\n    'aim.com', 'rogers.com', 'verizon.net',\n    'rocketmail.com', 'google.com', 'optonline.net',\n    'sbcglobal.net', 'aol.com', 'me.com', 'btinternet.com',\n    'charter.net', 'shaw.ca'],\n\n  defaultSecondLevelDomains: [\"yahoo\", \"hotmail\", \"mail\", \"live\", \"outlook\", \"gmx\"],\n\n  defaultTopLevelDomains: [\"com\", \"com.au\", \"com.tw\", \"ca\", \"co.nz\", \"co.uk\", \"de\",\n    \"fr\", \"it\", \"ru\", \"net\", \"org\", \"edu\", \"gov\", \"jp\", \"nl\", \"kr\", \"se\", \"eu\",\n    \"ie\", \"co.il\", \"us\", \"at\", \"be\", \"dk\", \"hk\", \"es\", \"gr\", \"ch\", \"no\", \"cz\",\n    \"in\", \"net\", \"net.au\", \"info\", \"biz\", \"mil\", \"co.jp\", \"sg\", \"hu\"],\n\n  run: function(opts) {\n    opts.domains = opts.domains || Mailcheck.defaultDomains;\n    opts.secondLevelDomains = opts.secondLevelDomains || Mailcheck.defaultSecondLevelDomains;\n    opts.topLevelDomains = opts.topLevelDomains || Mailcheck.defaultTopLevelDomains;\n    opts.distanceFunction = opts.distanceFunction || Mailcheck.sift3Distance;\n\n    var defaultCallback = function(result){ return result };\n    var suggestedCallback = opts.suggested || defaultCallback;\n    var emptyCallback = opts.empty || defaultCallback;\n\n    var result = Mailcheck.suggest(Mailcheck.encodeEmail(opts.email), opts.domains, opts.secondLevelDomains, opts.topLevelDomains, opts.distanceFunction);\n\n    return result ? suggestedCallback(result) : emptyCallback()\n  },\n\n  suggest: function(email, domains, secondLevelDomains, topLevelDomains, distanceFunction) {\n    email = email.toLowerCase();\n\n    var emailParts = this.splitEmail(email);\n\n    if (secondLevelDomains && topLevelDomains) {\n        // If the email is a valid 2nd-level + top-level, do not suggest anything.\n        if (secondLevelDomains.indexOf(emailParts.secondLevelDomain) !== -1 && topLevelDomains.indexOf(emailParts.topLevelDomain) !== -1) {\n            return false;\n        }\n    }\n\n    var closestDomain = this.findClosestDomain(emailParts.domain, domains, distanceFunction, this.domainThreshold);\n\n    if (closestDomain) {\n      if (closestDomain == emailParts.domain) {\n        // The email address exactly matches one of the supplied domains; do not return a suggestion.\n        return false;\n      } else {\n        // The email address closely matches one of the supplied domains; return a suggestion\n        return { address: emailParts.address, domain: closestDomain, full: emailParts.address + \"@\" + closestDomain };\n      }\n    }\n\n    // The email address does not closely match one of the supplied domains\n    var closestSecondLevelDomain = this.findClosestDomain(emailParts.secondLevelDomain, secondLevelDomains, distanceFunction, this.secondLevelThreshold);\n    var closestTopLevelDomain    = this.findClosestDomain(emailParts.topLevelDomain, topLevelDomains, distanceFunction, this.topLevelThreshold);\n\n    if (emailParts.domain) {\n      var closestDomain = emailParts.domain;\n      var rtrn = false;\n\n      if(closestSecondLevelDomain && closestSecondLevelDomain != emailParts.secondLevelDomain) {\n        // The email address may have a mispelled second-level domain; return a suggestion\n        closestDomain = closestDomain.replace(emailParts.secondLevelDomain, closestSecondLevelDomain);\n        rtrn = true;\n      }\n\n      if(closestTopLevelDomain && closestTopLevelDomain != emailParts.topLevelDomain) {\n        // The email address may have a mispelled top-level domain; return a suggestion\n        closestDomain = closestDomain.replace(emailParts.topLevelDomain, closestTopLevelDomain);\n        rtrn = true;\n      }\n\n      if (rtrn == true) {\n        return { address: emailParts.address, domain: closestDomain, full: emailParts.address + \"@\" + closestDomain };\n      }\n    }\n\n    /* The email address exactly matches one of the supplied domains, does not closely\n     * match any domain and does not appear to simply have a mispelled top-level domain,\n     * or is an invalid email address; do not return a suggestion.\n     */\n    return false;\n  },\n\n  findClosestDomain: function(domain, domains, distanceFunction, threshold) {\n    threshold = threshold || this.topLevelThreshold;\n    var dist;\n    var minDist = 99;\n    var closestDomain = null;\n\n    if (!domain || !domains) {\n      return false;\n    }\n    if(!distanceFunction) {\n      distanceFunction = this.sift3Distance;\n    }\n\n    for (var i = 0; i < domains.length; i++) {\n      if (domain === domains[i]) {\n        return domain;\n      }\n      dist = distanceFunction(domain, domains[i]);\n      if (dist < minDist) {\n        minDist = dist;\n        closestDomain = domains[i];\n      }\n    }\n\n    if (minDist <= threshold && closestDomain !== null) {\n      return closestDomain;\n    } else {\n      return false;\n    }\n  },\n\n  sift3Distance: function(s1, s2) {\n    // sift3: http://siderite.blogspot.com/2007/04/super-fast-and-accurate-string-distance.html\n    if (s1 == null || s1.length === 0) {\n      if (s2 == null || s2.length === 0) {\n        return 0;\n      } else {\n        return s2.length;\n      }\n    }\n\n    if (s2 == null || s2.length === 0) {\n      return s1.length;\n    }\n\n    var c = 0;\n    var offset1 = 0;\n    var offset2 = 0;\n    var lcs = 0;\n    var maxOffset = 5;\n\n    while ((c + offset1 < s1.length) && (c + offset2 < s2.length)) {\n      if (s1.charAt(c + offset1) == s2.charAt(c + offset2)) {\n        lcs++;\n      } else {\n        offset1 = 0;\n        offset2 = 0;\n        for (var i = 0; i < maxOffset; i++) {\n          if ((c + i < s1.length) && (s1.charAt(c + i) == s2.charAt(c))) {\n            offset1 = i;\n            break;\n          }\n          if ((c + i < s2.length) && (s1.charAt(c) == s2.charAt(c + i))) {\n            offset2 = i;\n            break;\n          }\n        }\n      }\n      c++;\n    }\n    return (s1.length + s2.length) /2 - lcs;\n  },\n\n  splitEmail: function(email) {\n    var parts = email.trim().split('@');\n\n    if (parts.length < 2) {\n      return false;\n    }\n\n    for (var i = 0; i < parts.length; i++) {\n      if (parts[i] === '') {\n        return false;\n      }\n    }\n\n    var domain = parts.pop();\n    var domainParts = domain.split('.');\n    var sld = '';\n    var tld = '';\n\n    if (domainParts.length == 0) {\n      // The address does not have a top-level domain\n      return false;\n    } else if (domainParts.length == 1) {\n      // The address has only a top-level domain (valid under RFC)\n      tld = domainParts[0];\n    } else {\n      // The address has a domain and a top-level domain\n      sld = domainParts[0];\n      for (var i = 1; i < domainParts.length; i++) {\n        tld += domainParts[i] + '.';\n      }\n      tld = tld.substring(0, tld.length - 1);\n    }\n\n    return {\n      topLevelDomain: tld,\n      secondLevelDomain: sld,\n      domain: domain,\n      address: parts.join('@')\n    }\n  },\n\n  // Encode the email address to prevent XSS but leave in valid\n  // characters, following this official spec:\n  // http://en.wikipedia.org/wiki/Email_address#Syntax\n  encodeEmail: function(email) {\n    var result = encodeURI(email);\n    result = result.replace('%20', ' ').replace('%25', '%').replace('%5E', '^')\n                   .replace('%60', '`').replace('%7B', '{').replace('%7C', '|')\n                   .replace('%7D', '}');\n    return result;\n  }\n};\n\n// Export the mailcheck object if we're in a CommonJS env (e.g. Node).\n// Modeled off of Underscore.js.\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = Mailcheck;\n}\n\n// Support AMD style definitions\n// Based on jQuery (see http://stackoverflow.com/a/17954882/1322410)\nif (typeof define === \"function\" && define.amd) {\n  define(\"mailcheck\", [], function() {\n    return Mailcheck;\n  });\n}\n\nif (typeof window !== 'undefined' && window.jQuery) {\n  (function($){\n    $.fn.mailcheck = function(opts) {\n      var self = this;\n      if (opts.suggested) {\n        var oldSuggested = opts.suggested;\n        opts.suggested = function(result) {\n          oldSuggested(self, result);\n        };\n      }\n\n      if (opts.empty) {\n        var oldEmpty = opts.empty;\n        opts.empty = function() {\n          oldEmpty.call(null, self);\n        };\n      }\n\n      opts.email = this.val();\n      Mailcheck.run(opts);\n    }\n  })(jQuery);\n}\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar mailcheck = require('mailcheck');\nvar hintElement;\nvar helpers = {};\n\nhelpers.checkEmail = function () {\n    var input = this;\n\n    if (hintElement) {\n        hintElement.parentNode.removeChild(hintElement);\n        hintElement = null;\n    }\n\n    hintElement = document.createElement('div');\n    hintElement.className = \"muted email-hint tiny-margin\";\n    this.parentNode.appendChild(hintElement);\n\n    mailcheck.run({\n        email: this.value,\n        suggested: function suggested(suggestion) {\n            hintElement.innerHTML = \"Did you mean <a>\" + suggestion.address + \"@<strong>\" + suggestion.domain + \"</strong></a>?\";\n            hintElement.onclick = function () {\n                input.value = suggestion.full;\n                hintElement.parentNode.removeChild(hintElement);\n                hintElement = null;\n            };\n        }\n    });\n};\n\nhelpers.isCountryInEurope = function (country) {\n    var europeanCountries = ['AT', 'BE', 'BG', 'CY', 'CZ', 'DE', 'DK', 'EE', 'ES', 'FI', 'FR', 'GB', 'GR', 'HR', 'HU', 'IE', 'IT', 'LT', 'LU', 'LV', 'MT', 'NL', 'PL', 'PT', 'RO', 'SE', 'SI', 'SK'];\n    return country.length > 0 && europeanCountries.indexOf(country.toUpperCase()) > -1;\n};\n\nhelpers.calculatePrice = function (plan, interval) {\n    var planPrices = {\n        \"personal\": 6,\n        \"developer\": 10,\n        \"agency\": 24\n    };\n    var price = planPrices[plan];\n    var isYearly = interval === 'year';\n    var total = isYearly ? price * 10 : price;\n    total += 0;\n\n    var elements = document.querySelectorAll('.price');\n    [].forEach.call(elements, function (el) {\n        el.innerHTML = '$' + total + (isYearly ? ' per year' : ' per month');\n    });\n};\n\nhelpers.toggleElements = function (elements, show) {\n    [].forEach.call(elements, function (el) {\n        el.style.display = show ? '' : 'none';\n    });\n};\n\nhelpers.showFormError = function (form, msg) {\n    var errorElement = form.querySelector('.errors');\n    errorElement.className = \"errors notice notice-warning\";\n    errorElement.innerText = msg;\n};\n\nmodule.exports = helpers;\n\n},{\"mailcheck\":1}],3:[function(require,module,exports){\n'use strict';\n\nvar app = {};\nvar helpers = app.helpers = require('./helpers.js');\nvar emailInputs = document.querySelectorAll('input[type=\"email\"]');\nvar creditCardForms = document.querySelectorAll('form[data-credit-card]');\nvar europeElements = document.querySelectorAll('.europe-only');\nvar countryInputs = document.querySelectorAll('.country-input');\nvar pricingForms = document.querySelectorAll('form[data-pricing]');\nvar confirmationElements = document.querySelectorAll('[data-confirm]');\nvar dropdownToggles = document.querySelectorAll('.dropdown-toggle');\n\nvar askForConfirmation = function askForConfirmation(event) {\n    var sure = confirm(this.getAttribute('data-confirm'));\n\n    if (!sure) {\n        event.preventDefault();\n        return false;\n    }\n};\n\n[].forEach.call(emailInputs, function (input) {\n    input.addEventListener('blur', helpers.checkEmail);\n});\n\n[].forEach.call(creditCardForms, function (form) {\n\n    var creditCardInput = form.querySelector('[data-stripe=\"number\"]');\n    creditCardInput.addEventListener('change', function () {\n        var valid = Stripe.card.validateCardNumber(this.value);\n\n        if (!valid) {\n            this.className = this.className + ' invalid';\n        } else {\n            this.className = this.className.replace('invalid', '');\n        }\n    });\n\n    form.addEventListener('submit', function (event) {\n        var form = event.form || event.target || this.form || this;\n        event.preventDefault();\n\n        // validate expiry date\n        var creditCardInput = form.querySelector('[data-stripe=\"number\"]');\n        var monthInput = form.querySelector('[data-stripe=\"exp_month\"]');\n        var yearInput = form.querySelector('[data-stripe=\"exp_year\"]');\n\n        if (!Stripe.card.validateCardNumber(creditCardInput.value)) {\n            helpers.showFormError(form, 'That card number does not look right, sorry.');\n            return;\n        }\n\n        if (!Stripe.card.validateExpiry(monthInput.value, yearInput.value)) {\n            helpers.showFormError(form, 'That expiry date does not look right, sorry.');\n            return;\n        }\n\n        // disable button\n        var submitButton = form.querySelector('[type=\"submit\"]');\n        var buttonText = submitButton.value;\n\n        submitButton.disabled = true;\n        submitButton.value = \"Please wait\";\n\n        Stripe.card.createToken(this, function (status, response) {\n\n            if (response.error) {\n                // re-enable button\n                submitButton.value = buttonText;\n                submitButton.removeAttribute('disabled');\n\n                helpers.showFormError(form, response.error.message);\n            } else {\n                form.elements.namedItem('user[card_last_four]').value = response.card.last4;\n                form.elements.namedItem('payment_token').value = response.id;\n                form.submit();\n            }\n        });\n\n        return false;\n    });\n});\n\n[].forEach.call(countryInputs, function (input) {\n    input.addEventListener('change', function () {\n        helpers.toggleElements(europeElements, helpers.isCountryInEurope(this.value));\n    });\n    helpers.toggleElements(europeElements, helpers.isCountryInEurope(input.value));\n});\n\n[].forEach.call(pricingForms, function (form) {\n    function updatePrice() {\n        var plan = [].filter.call(this.plan, function (node) {\n            return node.checked;\n        }).pop().value || \"personal\";\n        var selectedInterval = [].filter.call(this.interval, function (node) {\n            return node.checked;\n        }).pop().value || \"month\";\n        helpers.calculatePrice(plan, selectedInterval);\n    }\n\n    form.addEventListener('change', updatePrice);\n    form.addEventListener('keyup', updatePrice);\n    updatePrice.call(form);\n});\n\n[].forEach.call(confirmationElements, function (element) {\n    var event = element.tagName === 'FORM' ? 'submit' : 'click';\n    element.addEventListener(event, askForConfirmation);\n});\n\n[].forEach.call(dropdownToggles, function (element) {\n    element.addEventListener('click', function () {\n        this.parentNode.classList.toggle('open');\n    });\n});\n\nwindow.app = app;\n\n},{\"./helpers.js\":2}]},{},[3]);\n"],"file":"main.js","sourceRoot":"/source/"}